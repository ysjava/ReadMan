一. 功能
1.文本展示
2.字体切换
3.长按选择文本及弹窗
4.评论
5.章节本地缓存
6.章节目录展示
7.章节订阅

二.细节描述
    1.文本展示
        a.viewpager作为展示核心组件
        b.一般一个章节会分为多页展示,当当前页面处于章节首页时需要进行获取前一章节信息(如果有),然后重新加载数据至vp,
          当当前页处于章节末页时需要进行获取后一章节的信息(如果有),然后重新加载数据至vp.
        c.当章节未订阅时,仅为该章节展示一页数据,显示部位文本以及提示订阅.
        d.当当前页面正在展示未订阅的页面时,需要同时去加载前一章节信息以及后有章节信息,然后重载至vp.
        e.关于重载数据,vp展示的数据为1~3章:
          例如当阅读章节处于第一章时,整个vp数据仅一章;当来到末页去加载第二章,然后重载至vp,整个vp数据为一二章,共两章;
          当某一章未订阅时(第三章),该章只有一页展示,所以滚动到该页就会加载第二章与第四章数据,共三章.
        f.当vp当前页面页是未订阅章节,并订阅后,加载数据为当前章节与前一章.
    2.工具栏
        a.字体增大与减小
        b.屏幕亮度
        c.背景色切换及夜间模
    3.评论(段落)
        a.长按选择段落后跳出弹窗,可选择评论.
        b.段落的评论仅一级.
        c.评论弹窗包含段落文本和该段落评论集,以及评论框,点击后编辑完成列表更新
    4.章节目录
        a.展示所有章节,已缓存的加高亮以及缓存标识.
        b.如果选择已缓存的章节,直接从本地获取,不走网络(或者也走,然后对比后更新).
        c.选择未缓存章节,先加载本章,加载结束后才去加载前后各一章到本地,并且重载至vp(重载规则 二.1.e).
        d.如正在冲网络获取数据,则vp要显示正在加载中的提示,加载期间禁止滚动,加载结束后恢复滚动,如果失败需提供重试.
        e.加载的章节如果未订阅,那么不会缓存到本地.
    5.订阅
        a.仅在vp中选择单章订阅.
        b.订阅后重载数据至vp.
    6.其他
        a.所有配置信息,评论,订阅都保存到手机本地,模拟网络过程.
        b.用户就默认创建一个即可.

三.程序设计
    1.表
        用户表(User):
        name:string

        订阅表(subscription):
        user:User
        chapter:Chapter

        书籍(book):
        name:String
        chapterSize:Int
        isLocal:Boolean
        author:String
        desc:String
        chapters:List<Chapter>

        章节(chapter):
        name:string
        index:Int(章节码)
        content:String
        book:Book=
        comment:List<Comment>

        评论(comment):
        content:string
        user:User
        chapter:Chapter
        starIndex:Int
        endIndex:Int

        阅读历史(ReadHistory)
        bookId:String

    2.接口
        admin:
        增添书籍     \addBook(book:Book):Book
                    设置属性:
                    name,chapters.
                    设置章节属性:
                    name,content.
        查询全部书籍  \findBooks():List<Book>
        删除书籍     \removeBook(id:String):Boolean (相应的章节,评论,订阅等信息需要删除)

        user:
        查询全部书籍  \findBooks    (书名,封面url,id)
        查询书籍     \findBook(bookId:String):Book
        查询全部章节的name和是否订阅  \findChapters(bookId:String):List<ChapterCard>
        查询章节     \findChapter(bookId:String,chapterIndex:Int):ChapterCard
        订阅章节     \subscribeChapter(chapterId:String):Subscription
        发表评论     \putComment(context:String,chapterId:String,starIndex:Int,endIndex:Int):Comment
        查询章节下某段文字的评论列表 \findComments(chapterId:String,startIndex:Int,endIndex:Int):List<Comment>
    3.实体类
        ChapterCard:
        chapter,isSubscribe


//杂写
 数据处理类(DataRepository:DR)
1.当达到一个临界值时,去预加载其他章节数据,如果章节正在加载,则展示提示,失败提供重试.
2.  达到临界值->DR执行预加载5章,加载至DR中, 如果跳章,预加载前后各3章,
3.  最开始加载book时,不加载章节信息,只加载章节名.


书架: 本地导入书籍添加到书架,
浏览历史:

流程:
-在主页的书列表中点击,或者书架中点击 ↓
-点击根据书id去查,合并查询该书的浏览历史
-书的详情:↓
1: bool.isLocal ,如果是本地导入的书籍直接走本地查询后返回
2. 不是本地书籍也需要先进行本地查询,看看本书是否有缓存在本地的,有的话就直接返回,没有就走网络查询后存放本地

-点击开始阅读(继续阅读),根据阅读历史有无决定从头开始获取章节信息还是从阅读历史章节处获取.
-获取的章节数据为当前章节加前后3章,获取后存放缓存与本地.  (1 2 3 4 5 6 7,假如显示的章节为2或者6时,需要去加载1的前三章或则7的后三章)
-界面获取数据时,会根据书是网络还是本地的调用不同的方法.


当前章节末页,右滑(先获判断是否有下页,没有就获取下章,章节列表缓存中没有下一章了,但书中还有(就是预加载加载失败了),页面状态为加载中,开始主动加载本章,更新当前章节index,
当未加载失败时:展示加载失败提示与继续的按钮;
当加载成功时:添加至缓存集合中.  | 如果加载失败或正在加载中继续右滑,页面展示同上, 如果这时上一章加载出来了,那么左滑时,展示的页面应当是上一章的尾页;

当加载失败展示提示与重试按钮时, 这时候如果滑动后松手则自动重试, 如果该章加载失败了,那么重滑回该章时就会自动重试.  但如果是正在加载中就不进行重试.




PageDataProvider:
负责给PageView的数据请求做反馈

PageView:
-滑动时获取数据,根据获取的结果进行绘制,有两种情况:
1.获取数据正常,view正常绘制文本信息.
2.网络异常,view绘制提示信息与重试按钮.
-正在获取数据中时view绘制相应提示.
-假如当前页是11页,正在获取数据,10页也正在获取数据,这时候除了11页获取成功会进行数据重绘,其它页加载成功不会影响view的绘制,
 也就是说,只有当前页的数据是正在请求后成功后view会重新绘制外,其它页正在请求后成功的只会在数据层相应处理.
-如果当前页是请求失败的,当滑动时,

翻页器:
